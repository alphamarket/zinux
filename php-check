#!/bin/bash
clear
CERROR=0
VERBOSE=0
SYNTX=0
SCOUNT=0
ECOUNT=0
while test $# -gt 0; do
        case "$1" in
                -h|--help)
                        echo "[options]		[argument]		[comments]"
                        echo " "
                        echo "-h, --help					brief help"
						echo "-v	 				verbose output"
                        echo "-c 					continue parsing syntaxes if any error happens"
			echo "-s			Syntax Only"
                        exit 0
                        ;;
                -v)
                        VERBOSE=1
						shift
                        ;;
                -c)
                        CERROR=1
                        shift
                        ;;
		-s)
			SYNTX=1
			shift;
			;;
                -svc|-scv|-vsc|-csv|-vcs|-cvs)
                        VERBOSE=1
                        CERROR=1
			SYNTX=1
                        shift
                        ;;
                *)
                        break
                        ;;
        esac
done
EARRAY=()
echo "php checking initiated ..."
for FNAME in $( find . -type f -name "*.php" -o -name "*.inc" -o -name "*.phtml" | rev | cut -d " " -f1 | rev); do
	if ! [ -e $FNAME ]; then
		continue;
	fi
    ROOT=$(dirname $FNAME | cut -d "/" -f2);
	case "$ROOT" in
		"TEST")
			continue;
		;;
	esac
    NAME=${FNAME##*/};
	if [[ $SYNTX -eq 1 ]]; then
		SYNTX="-s";
	else
		SYNTX=""
	fi
	RES=$(php ${SYNTX} ${FNAME} 2>&1);
	needle='error:'
	if [[ "$RES" == *"$needle"* ]]; then	
	  if ! [[ $VERBOSE -eq 1 ]]; then
	  	echo -e "\e[31mF\c";
	  fi
      EARRAY+=("\e[31m[ FAILED ]\e[39m$FNAME");
	  EARRAY+=("\e[31m$RES\n");

	  if [ $CERROR -eq 0 ]; then
        echo -e "\n\e[31m[ FAILED ]\e[39m$FNAME";
	  	echo -e "\e[31m[ Failed ] $RES";
		exit 1;
	  fi
	  ECOUNT=$(($ECOUNT + 1))
    else
	  if [[ $VERBOSE -eq 1 ]]; then
		echo -e "\e[32m[ OK ]\e[39m$FNAME";
	  else
		echo -e "\e[32m.\c";
	  fi
	  SCOUNT=$(($SCOUNT + 1))
	fi
done
echo " "
for E in "${EARRAY[@]}"; do
	echo -e $E;
done;
if ! [ $ECOUNT -eq 0 ]; then
	echo -e "\n\n\e[31m[ $ECOUNT failure ]"
	echo -e "\e[32m[ $SCOUNT successed ]"
	exit;
fi 
echo -e "\e[32m[ All OK ] $SCOUNT files"
