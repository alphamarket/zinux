<?php

namespace iMVC\kernel\routing;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-09-08 at 07:22:49.
 */
class requestTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var request
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $_SERVER['REQUEST_URI'] = "/";
        $this->object = new request;
        $_POST['POST'] = "VALUE";
        $_GET['this'] = "is";
        $_GET['GET'] = "";
        $this->object->SetURI("/user/auth/login/saad/sada.json?&this=is&GET=");
        $this->object->Process();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    /**
     * @covers iMVC\kernel\routing\request::SetURI
     * @todo   Implement testSetURI().
     */
    public function testSetURI()
    {
        $this->assertEquals("/user/auth/login/saad/sada.json?&this=is&GET=", $this->object->GetURI());
        $this->assertNotEquals("^/some/uri^", $this->object->GetURI());
    }

    /**
     * @covers iMVC\kernel\routing\request::GetURI
     * @todo   Implement testGetURI().
     */
    public function testGetURI()
    {
        $this->testSetURI();
    }

    /**
     * @covers iMVC\kernel\routing\request::Process
     * @todo   Implement testProcess().
     */
    public function testProcess()
    {
        # uri is : /user/auth/login/saad/sada.json?&this=is&GET=
        # post is : POST=VALUE
        $this->assertAttributeInstanceOf('\iMVC\kernel\mvc\module', 'module', $this->object);
        $this->assertAttributeInstanceOf('\iMVC\kernel\mvc\controller', 'controller', $this->object);
        $this->assertAttributeInstanceOf('\iMVC\kernel\mvc\action', 'action', $this->object);
        $this->assertAttributeInstanceOf('\iMVC\kernel\mvc\view', 'view', $this->object);
        $this->assertEquals("usermodule", strtolower($this->object->module->full_name));
        $this->assertEquals("authcontroller", strtolower($this->object->controller->full_name));
        $this->assertEquals("loginaction", strtolower($this->object->action->full_name));
        $this->assertEquals("loginview", strtolower($this->object->view->full_name));
        $this->assertEquals("json", $this->object->type);
        $this->assertNotEquals(".json", $this->object->type);
        $this->assertNotEquals("some_other_type", $this->object->type);
        $this->assertArrayHasKey("saad", $this->object->params);
        $this->assertArrayHasKey("POST", $this->object->params);
        $this->assertArrayHasKey("this", $this->object->params);
        $this->assertArrayHasKey("GET", $this->object->params);
        $this->assertEquals($this->object->params['saad'], "sada");
        $this->assertEquals($this->object->params['POST'], "VALUE");
        $this->assertEquals($this->object->params['this'], "is");
        $this->assertEquals($this->object->params['GET'], "");
        $this->assertNotContains('saad', $this->object->GET);
        $this->assertNotContains('saad', $this->object->POST);
        $this->assertEquals($this->object->POST['POST'], "VALUE");
        $this->assertEquals($this->object->GET['this'], "is");
        $this->assertEquals($this->object->GET['GET'], "");
    }

    /**
     * @covers iMVC\kernel\routing\request::GetIndexedParam
     * @todo   Implement testGetIndexedParam().
     */
    public function testGetIndexedParam()
    {
        $this->assertEquals("saad", $this->object->GetIndexedParam(0));
        $this->assertEquals("sada", $this->object->GetIndexedParam(1));
        $this->assertEquals("this", $this->object->GetIndexedParam(2));
        $this->assertEquals("is", $this->object->GetIndexedParam(3));
        $this->assertEquals("GET", $this->object->GetIndexedParam(4));
        $this->assertEquals("", $this->object->GetIndexedParam(5));
        $this->assertEquals("POST", $this->object->GetIndexedParam(6));
        $this->assertEquals("VALUE", $this->object->GetIndexedParam(7));
    }

    /**
     * @covers iMVC\kernel\routing\request::IsPOST
     * @todo   Implement testIsPOST().
     */
    public function testIsPOST()
    {
        $_SERVER['REQUEST_METHOD'] = "POST";
        $this->assertTrue($this->object->IsPOST());
        $_SERVER['REQUEST_METHOD'] = "GET";
        $this->assertFalse($this->object->IsPOST());
        $_SERVER['REQUEST_METHOD'] = "FOO";
        $this->assertFalse($this->object->IsPOST());
        $_SERVER['REQUEST_METHOD'] = "";
    }

    /**
     * @covers iMVC\kernel\routing\request::IsGET
     * @todo   Implement testIsGET().
     */
    public function testIsGET()
    {
        $_SERVER['REQUEST_METHOD'] = "POST";
        $this->assertFalse($this->object->IsGET());
        $_SERVER['REQUEST_METHOD'] = "GET";
        $this->assertTrue($this->object->IsGET());
        $_SERVER['REQUEST_METHOD'] = "FOO";
        $this->assertFalse($this->object->IsGET());
        $_SERVER['REQUEST_METHOD'] = "";
    }
}
